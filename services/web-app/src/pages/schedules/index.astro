---
export const prerender = false;

import Layout from "@/layouts/root-layout.astro";
import { addDays, endOfDay, formatDate, isValid, startOfDay } from "date-fns";
import { ArrowLeftRightIcon, ChevronLeftIcon, ChevronRightIcon } from "lucide-solid";
import CommonHeader from "~/components/headers/common-header.astro";
import { Badge } from "~/components/ui/badge";
import { buttonVariants } from "~/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "~/components/ui/card";
import { DayPicker } from "~/components/ui/day-picker";
import {
    Select,
    SelectContent,
    SelectItem,
    SelectTrigger,
    SelectValue,
} from "~/components/ui/select";
import { Separator } from "~/components/ui/separator";
import TripsTable from "~/components/ui/trips-table.astro";
import { getRouteNextTrips } from "~/services/trips";
import { mostCommonValue } from "~/utils/search";

const routeId = Astro.url.searchParams.get("route");
const directionId = Astro.url.searchParams.get("direction");
const dateParam = new Date(Astro.url.searchParams.get("date"));

const curViewingDate = isValid(dateParam) ? dateParam : new Date();

const trips = await getRouteNextTrips({
    routeId: "26-VIC",
    directionId: 0,
    startDatetime: startOfDay(curViewingDate),
    endDatetime: endOfDay(curViewingDate),
    limit: 10000, // Basically infinite
});

const commonRouteShortName = mostCommonValue(trips.map((trip) => trip.route_short_name));
const commonTripHeadsign = mostCommonValue(trips.map((trip) => trip.trip_headsign));
---

<Layout bodyTransitionName="hero-app-demo">
    <Fragment slot="header">
        <CommonHeader title="Clairvoyance Schedules" />
    </Fragment>
    <Fragment slot="body">
        <div class="container mx-auto px-4 py-6">
            <div class="flex items-center gap-4">
                <Badge class="text-3xl px-2">
                    {commonRouteShortName}
                </Badge>
                <h1 class="text-2xl font-bold">{commonTripHeadsign}</h1>
            </div>

            <Separator class="mt-2 mb-4" />

            <div class="flex items-center justify-between gap- mb-4">
                <div class="flex items-center gap-4">
                    <a
                        href={`/schedules?route=${routeId}&date=${addDays(curViewingDate, -1).toISOString()}&direction=${directionId}`}
                        class={buttonVariants({ variant: "secondary" })}
                    >
                        <ChevronLeftIcon />
                    </a>
                    <DayPicker
                        client:only="solidjs"
                        date={curViewingDate}
                        onDateChange={(date) => {
                            alert();
                            console.log(date);
                            window.location.href = `/schedules?route=${routeId}&date=${date.toISOString()}&direction=${directionId}`;
                        }}
                    />
                    <a
                        href={`/schedules?route=${routeId}&date=${addDays(curViewingDate, 1).toISOString()}&direction=${directionId}`}
                        class={buttonVariants({ variant: "secondary" })}
                    >
                        <ChevronRightIcon />
                    </a>
                </div>

                <a
                    href={`/schedules?route=${routeId}&date=${curViewingDate.toISOString()}&direction=${directionId === "0" ? "1" : "0"}`}
                    class={buttonVariants({ variant: "outline" })}
                >
                    <ArrowLeftRightIcon /> Switch Direction
                </a>
            </div>

            <div class="flex gap-4">
                <Card class="overflow-auto">
                    <CardHeader>
                        <CardTitle>{formatDate(curViewingDate, "EEEE, MMMM dd")}</CardTitle>
                    </CardHeader>
                    <CardContent>
                        <TripsTable trips={trips} />
                    </CardContent>
                </Card>

                <Card class="w-min h-min sticky top-4">
                    <CardContent class="p-0">
                        <iframe
                            class="w-[400px] h-[700px] rounded-lg"
                            id="app-iframe"
                            data-route-id={routeId}
                            data-direction-id={directionId}
                            data-date={curViewingDate.toISOString()}></iframe>
                    </CardContent>
                </Card>
            </div>
        </div>
    </Fragment>
</Layout>

<script>
    const iframe = document.getElementById("app-iframe") as HTMLIFrameElement;
    const routeId = iframe.getAttribute("data-route-id");
    const directionId = iframe.getAttribute("data-direction-id");
    const curViewingDate = new Date(iframe.getAttribute("data-date"));

    window.addEventListener("hashchange", () => {
        console.log(`hash changed to ${window.location.hash}`);
        iframe.src = `/app/next-trips?route=${routeId}&direction=${directionId}&stop=${window.location.hash.slice(1)}&date=${curViewingDate.toISOString()}`;
        console.log(iframe.src);
    });
</script>
